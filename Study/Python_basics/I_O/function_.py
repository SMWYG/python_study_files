# ■함수를 사용하는 이유
# 1. 중복코드 제거
# 2. 프로그램의 흐름 파악 용이

# ■필수로 알아야 할 것들
# 1. 파이썬 함수에서 return을 두번 이상 쓰는건 의미없다. 첫번째 return문을 만나면 return을 주고 함수를 빠져나가기 때문이다.
# 2. return을 할 떄 return에 주는 값이 없더라도 실행이 되고 함수를 빠져나간다.
# 3. 함수의 입력 변수에 초깃값을 주고 싶을 때는 그 변수를 입력 변수의 순서중 가장 뒤에 둔다.

# ■좋은 함수를 만드는 원칙
# 1. global 명령어를 사용하지 않는다. (외부 변수에 종속적인 함수는 좋은 함수가 아니다.)

# 기본 함수 구조
def sum(a, b):
    return a+b
    # a와 b라는 입력값을 준것이고 출력으로는 입력받은 a와 b를 더해서 출력하라는 뜻이다.


# 입력값이 몇 개가 될지 모를 때
def sum(*args):
    sum=0
    for i in args:
        sum = sum+i
    return sum
    # 입력값이 몇 개가 될지 모를 때는(즉, 안줘도 됨. 이거 핵심!!) 파이썬에서 약속된 *원하는 변수명 으로 파라미터값에 주면 된다.
    # 이때 보통 원하는 변수명이 아닌 args로 naming을 하는게 일반적이다.
    # 파라미터가 저런식으로 *args이게 되면 몇개의 값을 저기에 주든 상관이 없게되고 그 값들은 저절로 튜플로 묶이게 된다.
    # **arge일 경우 딕셔너리로 묶인다.
    # *args와 같이 파라미터를 또 줄 수도 있다. 따로 예를들어 def sum(a, b, *args)
    # a와 b는 무조건 줘야 되는 파라미터라는 뜻이겠지 저렇게 되면

