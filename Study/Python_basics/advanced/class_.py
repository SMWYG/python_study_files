# ■클래스란 무엇인가?
# 클래스란 똑같은 무엇인가를 계속해서 만들어낼 수 있는 설계 도면 같은 것이다.
# 인스턴스란 클래스에 의해서 만들어진 피조물이다.

# ■객체 vs 인스턴스
# 객체란 그냥 객체를 뜻한다.
# 인스턴스란 특정 객체가 어떤 클래스의 객체인지를 관계 위주로 설명할 때 사용된다.
# 예를들얼 dahan = person()에서 dahan은 객체이며 person클래스의 인스턴스라고 할 수 있다.
# 즉, 인스턴스가 더 의미가 있는 것임

# ■클래스 사용 이유
# 아무래도 재사용성이 가장 클 것이다. 짧은 코드를 통해(객체 선언이라는) 재사용을 할 수 있으므로

# ■알아야 할 것들
# 1. 클래스에 의해서 생성된 객체들은 각각 다른 저장 공간을 가지고 독립적으로 동작한다.

# ■좋은 클래스의 조건
# 1. 오류가 발생할 수 있는 상황을 모두 차단해야 한다.

# ■self
# self란 클래스에서 생성된 해당 인스턴스를 지칭한다.
# 클래스안에 있는 모든 함수는 첫 파라미터로 self 값을 가진다.
# 이것을 가지는 이유는 이 클래스의 함수를 해당 클래스의 인스턴스만 사용할 수 있도록 하기 위함이다.
# 즉, self와 해당 함수를 사용하려는 객체를 대조해 이 객체가 우리 클래스의 인스턴스인지를 구분하고 맞으면 사용할 수 있게 해주는 것이다.

# ■__init__
# __init__은 클래스가 기본적으로 보통 가지고 있는 함수로 인스턴스를 만들 때 자동적으로 실행되는 함수이다.

# ■클래스 변수
# 클래스 변수는 해당 클래스의 인스턴스들이 모두 공통으로 가지는 변수로 그러므로 사용할 때는 클래스명.클래스변수 로 사용을 할 수가 있다.

# ■전역 및 지역 변수
# 파이썬의 클래스 안에서 사용되는 지역 변수는 마치 전역 변수와 같이 동작한다. (자바와는 다르니 주의)

# ■상속
# 해당 클래스의 모든 코드를 복사해 온다고 생각하면 된다. 맨 첫코드에 보이진 않지만 똑같은 코드를 복사해왔다고 생각하면 된다.

# ■오버라이딩(Overriding)
# 상속받는 클래스와 상속하는 클래스에 동일한 이름의 메소드가 있을 때 사용되는 것으로 상속받는 클래스에서 그 같은 이름의 메소드를 그 클래스에
# 맞게 그냥 바꿔주면 된다. 너무나 간단하다.

# ■오버로딩(Overloading)
# 내장되어 있는 __함수__의 내용을 바꾸는 것을 말한다.




# 클래스 만들기
class 상속받을 클래스명(상속할 클래스명):
    클래스 변수

    def 클래스 함수:
